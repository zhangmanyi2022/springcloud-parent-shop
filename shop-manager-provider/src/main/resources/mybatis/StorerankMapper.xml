<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.StorerankMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Storerank" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createdDate" property="createddate" jdbcType="TIMESTAMP" />
    <result column="lastModifiedDate" property="lastmodifieddate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="isAllowRegister" property="isallowregister" jdbcType="BIT" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="BIGINT" />
    <result column="serviceFee" property="servicefee" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createdDate, lastModifiedDate, version, orders, isAllowRegister, memo, name, 
    quantity, serviceFee
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from storerank
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from storerank
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Storerank" >
    insert into storerank (id, createdDate, lastModifiedDate, 
      version, orders, isAllowRegister, 
      memo, name, quantity, 
      serviceFee)
    values (#{id,jdbcType=BIGINT}, #{createddate,jdbcType=TIMESTAMP}, #{lastmodifieddate,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIGINT}, #{orders,jdbcType=INTEGER}, #{isallowregister,jdbcType=BIT}, 
      #{memo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{quantity,jdbcType=BIGINT}, 
      #{servicefee,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Storerank" >
    insert into storerank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createddate != null" >
        createdDate,
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="orders != null" >
        orders,
      </if>
      <if test="isallowregister != null" >
        isAllowRegister,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="servicefee != null" >
        serviceFee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        #{orders,jdbcType=INTEGER},
      </if>
      <if test="isallowregister != null" >
        #{isallowregister,jdbcType=BIT},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=BIGINT},
      </if>
      <if test="servicefee != null" >
        #{servicefee,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Storerank" >
    update storerank
    <set >
      <if test="createddate != null" >
        createdDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=INTEGER},
      </if>
      <if test="isallowregister != null" >
        isAllowRegister = #{isallowregister,jdbcType=BIT},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=BIGINT},
      </if>
      <if test="servicefee != null" >
        serviceFee = #{servicefee,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Storerank" >
    update storerank
    set createdDate = #{createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      orders = #{orders,jdbcType=INTEGER},
      isAllowRegister = #{isallowregister,jdbcType=BIT},
      memo = #{memo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=BIGINT},
      serviceFee = #{servicefee,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findPage"  resultMap="BaseResultMap" >
<bind name="off_set" value="(page-1)*rows"/>

    select * from storerank order by id Limit #{off_set},#{rows}


  </select>

  <select id="count" resultType="java.lang.Long">
  select count(*) FROM storerank
  </select>

  <select id="findStore"  resultMap="BaseResultMap" >


    select * from storerank order by id Limit #{start},#{end}


  </select>

  <select id="findStoreCount" resultType="java.lang.Long">
  select count(*) FROM storerank
  </select>
</mapper>